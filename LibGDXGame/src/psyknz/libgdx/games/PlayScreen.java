package psyknz.libgdx.games;

import com.badlogic.gdx.graphics.Pixmap;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.BitmapFont;

public class PlayScreen extends GameScreen implements ElementListener {
    
	public BitmapFont font;
	public Pixmap pix;
	public Texture tex;
	
	// References to all core GameElements on the screen.
	public ShapeElement arena;
	public PlayerElement player;
	public EnemyElement enemies;
	public ConsoleElement console;
	
	public PlayScreen(LibGDXGame game) {
		super(game);
	}
	
	@Override
	public void positionElements() {
		pix = new Pixmap(128, 64, Pixmap.Format.RGBA8888);
		pix.setColor(1, 1, 1, 1);
		
		// Draws the texture for the snake sprites.
		pix.fillCircle(15,  15,  15);
		
		// Draws a dot to use for making rectangles.
		pix.fillRectangle(0, 33, 1, 1);
		
		// Create the texture and then dispose of the pixmap used for that texture.
		tex = new Texture(pix);
		pix.dispose();
		
		// Generate sprites which will be used GameElements
		Sprite circle = new Sprite(tex, 0, 0, 32, 32);
		Sprite dot = new Sprite(tex, 0, 33, 1, 1);
		
		font = new BitmapFont();
		font.setColor(1, 1, 1, 1);
		
		arena = new ShapeElement(this, dot, Color.RED, game.GAME_WIDTH / 2, game.GAME_HEIGHT / 2, game.GAME_WIDTH - 20, game.GAME_HEIGHT - 20);
		arena.filled = false;
		elements.add(arena);
		
		player = new PlayerElement(this, circle, game.GAME_WIDTH / 2, game.GAME_HEIGHT / 2);
		elements.add(player);
		
		enemies = new EnemyElement(this, new Sprite[] {circle});
		elements.add(enemies);
		
		console = new ConsoleElement(this, "PlayScreen");
		elements.add(console);
	}
	
	// Disposes of all assets generated by this screen.
	@Override
	public void dispose() {
		super.dispose();
		tex.dispose();
		font.dispose();
	}
	
	// Processes events from GameElements on this screen.
	@Override
	public void event(ElementEvent event) {
		
	}
}
